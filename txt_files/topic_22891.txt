"Hour of Code" is taking place during Computer Science Education Week (December 9-15, 2013). If you're looking for a Scratch activity, you might be interested in the ScratchEd Team's "Interactive Holiday Card" activity, which includes a teacher guide, a handout, and a self-guided tutorial. This thread was started in October 2013 to imagine the possibilities for the "Hour of Code"... What should someone's first hour of programming look like? What activities might you have them do? What projects might show them? What might the essence of the experience include? Share your ideas in the thread below...

Questions from the group with Rosemary, Lorraine, Sandie -- How do we think about age range? What elementary school students can do in an hour will look different than what high school students might do. What do you give people ahead of time? What happens when you start with a blank screen vs. you start with something that you can remix. How do we help the learners end with a finished product? How do we show what's possible? Start with a video that includes snippets of what's possible, "this is what Scratch is for" and "here's what can be done" and "make something amazing" and "your imagination is the only boundary". What other resources might be possible? Scratch cards. (Tips window have no surprise.) Project ideas -- Something fishy: interactive aquarium Experimenting with the dot: adding interactivity to simple graphics Bring it to life: bring two prescribed objects to life Goals for the hour -- For the opening: snippets of range of possibility (movement, sound, interactivity) (Getting an account or not) Getting to building right away Varies for standalone vs. group: some sharing via studio or in class

Great point from Ingrid: how do we deal with the logistics of "hour of code" in the school environment? An hour becomes two blocks.

From Ingrid's Google doc Interactive Art Using the sound/keyboards to draw in 10 Block Challenge Good way to get started Watched examples of things that were created in 10 block challenge - this is how I did my 10 block challenge Community Project How can all these projects come together Scratch Cards 1 pagers Tying it into particular subject areas Remixing a project Remix starter projects Dancing - starting with a premade projects Involve different media as much as possible Sound/music/graphics Utilizing the TIPS window in Scratch - having a specific Scratch Hour of Code Steps Window Stand Alone vs. Teacher Avoid being a tutorial Sample Projects Nice Graphics Voice Video Sensors Racing Connections with other people/greeting cards/birthday cards Characters Dancing Stick figure in different poses - programming them to script them in different positions, add music, kids dance along Group 2 Simulations/Games related to particular subject areas Music in projects Pen Tools to Write Names Have them write their name with the pen tool Group 3 Doing a theme - like something fishy Bringing simple shapes/dots to life interactions so many potentials with just a simple dot narration and throwing out ideas of what people have done in Scratch give people ideas because the blank screen is intimidating backwards design - I want to do this - what types of steps do you need to take to get there Partner students up to complete projects

Ideas from Lorraine: the idea of "Scratch Pals", sharing ideas and artifacts between learners (potentially people who are on opposite sides of the earth).

cultural comparison: what is 5th grade in japan like compared with 5th grade in the united states

Priya suggested connecting with others via ePals Other sources of connections via Lorraine: ScratchEd website, Scratch Day website

Looks a great idea but is this just for US schools/students? I hope the material will be made available outside of the US. I think there would need to be number of activities depending on age range and ensure that part of the time is spent explaining what has been achieved at the end of the session. Would expect some very simple game for U10's (e.g. very simple maths e.g. what is 2+3?), a little more advanced for U13's and maybe something to control something e.g. turn on a motor or LED for older children. All achievable using Scratch (of course :-) ). Clearly the material to be used needs to be 'road-tested' and suitable for use on different equipments (not just PCs, MACs, but also machines such as RaspberryPI and tablets). There also need to be enough supporters to help as the poor teacher won't be able to cope on their won. When I have done 'hour coding sessions with 9/10 year olds, I find that the ratio of at least 1 supporter for 5 children is essential. This ratio can increase for older children but it does depend on the ability of the students.

I'm still a big fan of Scratch Cards. . . I had great success with 9th/10th graders using the following strategies: Have previous/experienced Scratch student open with brief project presentation. Either student or instructor gives cursory intro to the Scratch interface. Group students in clusters of 4-5, one student per laptop. Students are given 2 minutes to create account, start new project and choose one sprite at random. Each group given 4-5 different Scratch cards. Announce they have 2 minutes to try out the block/technique on their card. After 2 minutes yell, "Switch," and they all pass their card and add new block to their project. Do this 4 times then yell, "Scratch." Now instead of switching cards, students move to the next computer and modify that person's project. After 4 "Scratches" everbody returns to their seats to check out what has become of their original project. If time permits, do gallery walk and/or ask for volunteers to present their Scratched Scratch project. Ticket to go is adding their project to a Scratch Studio created for that specific class. Can broaden by having a grade- or school-wide studio. My goal in developing the above procedure was to immediately engage students, filter the possibly overwhelming block-based coding environment into just 1 block at a time and focus their energy on coding rather than spending 20 minutes browsing canned-clipart. The shifting of seats not only keeps things lively, but also removes some of the attachment to project outcome, as well as physically demonstrating the idea of collaboration and remixing.

I have middle schoolers in a semester long class. Some are currently avid Scratchers. I'm wondering how to use them as resources to teach the other students. I like Derek's idea and maybe I could send them each out with a pack of cards and directions. I'm thinking of asking science or math teachers for a class period and they could have laptops for all their kids or pairs of kids. I like Karen's idea of starting with a 'this is possible' video. Currently, I use this one in class: http://www.youtube.com/watch?feature=player_detailpage&v=jxDw-t3XWd0 It's from theStarting_from_Scratch_LEARNER.pdf curriculum I have my students do for a couple of weeks as an intro. Of course, there's the problem of kids who already program in the class with non-programmers, but they could be resources. Maybe a combination of ideas--total newbies use the cards, slightly familiar with use the 10 block challenge, others create a simple game in scratch or remix something with specific goals in mind. We have a a 7-12 grade American-style school and my kids are 7-8 grades. We have some HSers who have done Scratch, but most haven't. I'd like everyone to have a chance at it before they leave school, so the Hour of Code is a great way to start. I'm also wondering what tutorials will be available at the Hour of Code site:http://csedweek.org/resource_kit/tutorial

Howdy folks, I'm glad to have stumbled across this thread (and Derek, glad to know that you're a part of it). I'm heading up efforts to help learners 6-18 at a very large network of afterschool institutions (sorry, can't name names in a Google-able thread!) engage in the Hour of Code, and wanted to share my perspectives on the space. Basically, we're hoping that staff at participating organizations are able to run hourlong sessions using Scratch, Kahn Academy or Code Academy. Iknow for a fact that, at many organizations, one or more staff have some familiarity with Scratch. This makes it a great candidate. However, their familiarity is entirely variable and their confidence in self-generating hourlong implementation objectives isn't a given. In general, their anticipation is that we (meaning me, from the HQ)can provide more specific guidance about how best to utilize Scratch in that one hour session. So, I've been looking forward to the outcome of this thread. With that in mind, here are some of the opportunities and constraints that I've seen: I've found the 'Scratch Cards' most helpful &hadn't know of their existence until this thread. Because the afterschool space tends to be a bit chaotic, I'd avoid 'switching stations' too frequently, or at all. Computer station audio is not a given, but it does exist. So we have to plan on scenarios that don't rely on instructional video, although instructional video could enrich the session. We could presume that instructors can step in if audio/video isn't a possibility. Ilove the idea of generating anew, particularly with a very concrete goal in mind (animate two objects), but also see the value of remixing (a different sort of tinkering). If the later, it would be awesome to use that experience to help entry-level Scratchers get a sense of [loco]motion and perhaps, even variables. I'd love to use this as an opportunity to shift the instructor - learner paradigm a bit. When a learner or group is struggling with a logic question, why not turn that to the class to resolve? Our educators don't always feel this empowerment (often try to answer the question themselves). What would an hour of using Scratch look like with a 1:2+ computer:learner ratio? From my vantage, goals for the hour include: Growing staff and learner familiarity with Scratch Teaching some of the basics Engaging learners in problem-solving of modest, reasonable complexity Describing how an understanding of Scratch can lead toward 'real-world' code tinkering Indicating a 'what next' (which might be very much specific to this organization) Which means that a session could: Introduce Scratch through brief dialoge w or w/o video (5 mins) Introduce an intiial simple problem (move from Point A to Point B)(10 mins) Introduce additional logic (loop to draw a shape) (10 mins) Apply in the context of a remix to solve a problem (e.g., Activate C when A hits B) (30 mins, fuzzy) Recap / Talk through challenges / solutions / what next (5 mins) So... those are some perspectives on my approach to the day and Scratch space. Perhaps it'll be helpful food for thought as the materials evolve?Here's to hoping so! Cheers, --Dave

The problem I'm having with using the scratch during that week, is access. Our computers at school have deep freeze so not allowed to download to pcs. scratch 2.0 is web based but then you have the problem of creating accounts for everybody. My after school group I created 25 accounts with my email. But now that we are going to start a new group and end this one, do I recycle those accounts or create new ones. Back to the hour of code,I have created some projects for the kids to remix and play with but haven't figured out yet how to give them access. I did put Scratch 1.4 on our shared drive was going to see if the downloadable 2.0 would work from the shared drive. But then there is a long process for students to open and use. First have to go to shared open Scratch, then go back to share and open project. Any ideas, I plan on our school doing the Hour of Code, from kindergarten to 5th grade. Planning on using Scratch for grades 3-5.

Students do not need an account to create a project in Scratch 2.0, however without an account they will not be able to save their project. If you want/need them to crate and save a new project you might get away with creating just 1 group account--then each student use their name for project name (first name & last initial for privacy). The advantage of this method is seeing all of their projects when you are logged into that account.

One possibility: Speed Racer - a 1-hour Scratch introduction

Hi everyone, Thanks for all of the suggestions -- your ideas were incredibly helpful in developing the tutorial. A draft of the tutorial is available at http://scratch.mit.edu/hoc. Helen, Josh, Michelle, and I would love testing help -- let us know if you spot any typos, bugs, or broken links! We'll also be working on resources for teachers to accompany this self-guided tutorial. Please let me know what would be helpful as accompaniment to what's in the http://scratch.mit.edu/hoc tutorial. Thanks! K

Hi Karen, The tutorial looks great.  I got just one question. Due to bandwidth and account issues, I have installed the Beta Offline Scratch 2.0 on my computers in the lab, and was planning on having my students use that until the Teacher Accounts came online. I just now downloaded the tutorial and open it in the Beta Offline Scratch 2.0 but when I open the file the entire Tutorial is missing. Am I doing something wrong or can the tutorial not be used with the Beta offline Scratch 2.0?

Hi Sandy, The tutorial is something that currently lives online. (I'm hoping to have a downloadable version available, but let me see what might be involved.) Thanks! K

Dear Karen, when I introduce Scratch, I say that is a "learning environment", because to say it is a 2language of programming" is something reductive. I would like to change also on wikipedia. What do you think? Beatrice

The tutorial is great! I plan on my entire school participating in the hour of code, so I have a few questions about the tutorial. If a student and teacher has no experience with scratch and tries to follow the tutorial, they may become frustrated when trying to create the sprites that are in the tutorial. I think maybe we should have a tutorial that uses backgrounds, sounds and sprites that are available in scratch. From my experience the students will want to create the project as shown. If these are to be where the student needs little teacher intervention or if its a teacher who has no experience, the tutorial needs to be simple and easy to follow with no extras such as using the paint interface, importing of images etc.

Doris, I was thinking the same thing. I was going to make that suggestion and then I thought I would just provide my students with a folder on their desktop of holiday/winter themed graphics. For me that is no big deal and importing in Scratch is easy, however if for the inexperience teacher it might be an issue.

Hi Doris, Thanks for the feedback. We'll be adding a collection of holiday-themed assets to the library soon. K

thanks that would be great!

My problem with doing that is we have deep freeze and can not save on desktop. Usually I save on a shared drive for students, but most of my students ( hate to say it but teachers also) need help getting there. I think if they include some holiday themed items that would solve the problem. Just found out today our music teacher is having a sub that week, so I need it simple lol

My school used to have Deep Freeze, too. I got in the habit of creating a starter project which included a default set of sprites, then had each student remix it. You can also include any instructions/goals/even a rubric as the starting screen, which they can then hide/delete. This has the additional advantage of seeing all of their projects listed as remixes of your original project (now availabe in the fun "Remix Tree" view), an instant online project portfolio ready for assessment and/or showing off.

I posted several lessons for Hour of Code aligned to the middle school Common Core State Standards. They are more proof that it can be done than anything actually user-tested... but maybe someone can take and adapt.

Derek, It never occurred to me to use the Remix tree in that manner. What an excellent suggestion...thanks!

All of you are providing great resources! Very good! We are organizing an Hour of Code for 72 people (36 couples child + parent). Our workshop will be slightly longer, it will have 2.5 hours in duration. We will divide them into two levels: those who already know how to program in Scratch and those yet don't. To design the exercises, we find great inspiration in proposals by Derek Breen, Brian Foley, and the tutorial of the SratchEd Team (great videos!). We have also liked the Studio of projects to remix that has created Adriano Parracciani (CyberParra). To reserve a place, we are using Eventbrite, which is a great resource to follow and to be in touch with all the people who enroll in the workshop. Also, they don't charge anything if the event organized is free. Do you know if is this the Studio to share the creations that everyone do? http://scratch.mit.edu/studios/270514/ To share the projects... Should we suggest to people to create his own account? Or we should create a unique profile for use by all? A big hug, Marta

Hi Marta, The Hour of Code studio is available at http://scratch.mit.edu/studios/279432 An account for each person is probably easiest... Thanks! K

You can also use the backpack. Create a starter project and let your students drag the sprites they want to use into their backpacks. When they create a new project they can also use their assets from the backpack.

Thank you Brian! I found a video tutorial of your "Speed Racer Game" in YouTube, by Amy Cox. http://www.youtube.com/watch?v=LYlLZOPEDAY

Hi Karen, Where can we find the holiday-themed sprites & backdrops that arebeing used for the Scratch event? Thank you. Marianne

Created this:scratch.mit.edu/projects/14804494/ based on the ideas from Scratch. However, I am linking in the common core state standards in math and ELA and having the skills build on each other as the grade levels progress.

Hi, love your idea of the holiday cards for the Hour of Code activity. I was wondering if someone could quickly add some holiday-related sprites? You picture a snowman, tree, and gift, but none of them are found in the library. While, of course, it's possible for the kids to draw their own, for those of us who are not skilled artists, you're adding a layer of complication that could stop some kids in the first step of the tutorial. They will either balk at having to draw, whine that there are none available, or spend so long drawing just the perfect sprites that they never get on to the coding part. Maybe someone is already hard at work doing this, if not, if someone could add some appropriate sprites and backgrounds, it would help. If needed, I can ask my daughter to whip some up and I'll email them to you to add.

My thoughts also. It was mentined they were going to add some holiday themed sprites and backgrounds. Hopefully these will be ready by next week.

Thanks!! The kids say their cute!I have my class of guinea pigs trying them out. Weird thing, though, on my computer, Chrome does not display the holiday sprites while IEdoes. However, the kids can get them using either. I'm sad. :-) I also pulled some sprites from cards already on your site and put them in a folder along with the HoC Word doc on our kids' common drive and google driveso they can access them that way, too.

http://scratch.mit.edu/projects/15055329/ Idid it! I'm so good.

I checked after what you said about chrome, my pc does not display them either in chrome, but they are there in IE and Firefox.

For those who have asked about holiday-themed sprites and backgrounds, a new theme titled "Holiday" has been added to sprites and backgrounds library! Also, if you haven't already, I encourage you to check out the Scratch Hour of Code teacher guide at https://scratched.gse.harvard.edu/hocand Scratch Holiday Card handout at http://scratched.media.mit.edu/resources/scratch-holiday-cardwhich has been translated into Spanish, Portuguese, German, and French. Thank you again for sharing your Hour of Code ideas and feedback with us, and we hope you'll join us in celebrating CSEdWeek next week! Sincerely, Michelle, on behalf of the ScratchEd Team

Several people mentioned that they didn't see the holiday-themed sprites and images in their Chrome browswer. If you have this problem, try clearing the browser cache (go to the Chrome menu and select "Clear Browsing Data"). Happy Hour of Code!

Hi Michelle, is there a way to update the Scratch 2.0 offline editor to include the holiday themed sprites and backdrops?

Hi Sandy, The latest version of the offline editor now includes the new holiday images! Please note that you may need to delete the previous beta version if you had already installed it. http://scratch.mit.edu/scratch2download Thanks, M

For italian Folklore we will make something with the BEFANA character http://en.wikipedia.org/wiki/Befana Using ideas of Gianni Rodari, author of Grammar of Fantasy. http://en.wikipedia.org/wiki/Gianni_Rodari Happy hour of code! I have a 3rd class this morning, in the afternoon middle class and saturday my class at the high school Very busy hours... beatrice

