Wow. This surprised me. Google has announced its App Inventor, which they say "stands on the shoulders" of Scratch and other work. The blocks structure sure look similar (actually, a little like PicoBlocks). The video demo even uses a cat! Was the Scratch team invoved with this at all? Will this affect plans for Scratch in the future? For teaching lower and middle school, I'm now inclined to start with Scratch and then use App Inventor. It seems like it would be a great transition. Peter R.

Members of the MIT Scratch Team have been sharing ideas with the Google App Inventor team over the past year. The two projects have many similar goals and visions, though App Inventor has focused explicitly on the special features and affordances of mobile phones. Some of our discussions with the App Inventor team could influence how we think about future versions of Scratch -- particularly, the ways that Scratch organizes, accesses, and interacts with online data. Mitch Resnick, MIT Scratch Team

Fascinating. Thank you for the response Mitch.

Samsung had a a special version of Scratch that ran on Samsung and Nokia phones by making a jar file that could be installed directly on a phone. This is now gone and MITare really missing a trick by not redeveloping this for Scratch 1.4 (which has variable size stage) - it is possible simply to run a scratch app on a mobile phone using java if someone does the right tweaks to get it to run. Can we have this soon please ??

We agree that it would be good to have a version of Scratch running on mobile phones. John Maloney, the lead software developer for Scratch, has invested some time investigating the possibilities for Scratch on mobile devices, and he points to several challenges: * Performance. Many mobile devices don't have sufficient performance to run Scratch well. That was one of the problems with the Samsung version. * Screen size. It's not easy to squeeze the Scratch UI onto the small screen of a mobile device. Our feeling is that a totally different UI would be needed to author Scratch projects on a mobile device. (Of course, it is easier to create a Scratch player, with no authoring capabilities, for a small screen.) * Lack of standards. There is a lot of variability among mobile devices, so it would be difficult to make a version of Scratch that works on many different types of mobile devices. * Legal issues. A third-party software developer created a Scratch player for the iPhone and iPad, but Apple decided not to allow it, as part of its policy against apps that interpret or execute code. Here's our reaction to Apple's decision. * Our time. The MIT Scratch Team is a relatively small group, so we need to focus our efforts. Right now, we are focusing most of our development effort on creating a new version of Scratch that runs inside web browsers. We hope that this new version will support new types of Scratch projects (e.g., accessing online data) and new types of collaborations. As we work on this new version, we will keep looking for opportunities to bring Scratch to mobile devices. Mitch Resnick (for the MIT Scratch Team)

