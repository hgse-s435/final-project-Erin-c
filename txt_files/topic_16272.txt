HI! I am an artist and an art educator. Within the past two years, I have become very interested in incorporating technology in my lessons for children. Now I am teaching video game design with Scratch and the new course I am desiging is not very long in time. I am thinking the children may not have time to draw their own original sprites and stages. Ultimately they will have to use the already created sprites and stages which they will have to import from the files of images saved in Scratch. This sacrifice of drawing their own sprite and stage upsets the artist side of me. Do you think it is a bad idea to have the chldren use the already created sprites and stages for the sake of saving time to learn the programming? The goal of the course is to teach children, whom have never used computers before, to confidently use computers and to problem solve with technology. Thank you for any advice you can give. Best, Tiffany

Perhaps Iam NOT the best person to reply to this since I have a bias toward software engineering (More than 30 years working on the software development side.) But here goes... I spend only one week teaching the kids to develop their own artwork. It is enough time to become familiar with the tool and to give them a taste of exercising their artistic muscles. BYOB/Scratchis not the right tool for learning this discipline. If Iwere to devote more time, Iwould teach them to use Photoshop, Illustrator,and/or Gimp. BYOB provides an interesting mechanism for using created graphics, but a poor tool for creating them. The course Iteach is a course in software engineering. Itry to expose the kids to a wide variety of information which focuses on software engineering. As Imentioned before, this includes a week of drawing sprites as I see this being an important part of development, but in addition to the basics, I dive into recursion, artificial intelligence, algorithmic complexity, software testing, etc. In addition, I use other tools to dip into web development, database development, etc... I also spend a week developing sound effects for which BYOB/Scratch has a record button but no editing/modification features so Ihave to introduce another tool there (Audacity). We spend a significant amount of time collaborating on projects with different teams developing pieces of programs which are consumed by the group. I also have them develop code within frameworks that allow them to focus on the concepts we are trying to learn. Leveraging the work of others is critical to developing software which exceeds human capability to develop in a reasonable time frame, if at all... How many man-hours are represented by any of the applications you run today?Iintroduce them to free resources on the web for sprites and sounds and recommend they use them/modify them as needed. Iwant to expose them to a variety of concepts from which they can take more specialized courses in the future. In the end my goal is for them to learn to write basic programs (which in BYOB thankfully is a lot of fun video games) and to become familiar with the tools needed should they wish to pursue other avenues for career interest. So Iguess the short answer is (too late, I know)I do not think it is a bad idea to teach the kids to leverage the work of others for the sake of learning programming. On the contrary, Ithink it is critical to their success.

Looking back at the goal of the course I now see how it is ok to use the already created sprites and stages.

Dear Al, Thank you for your thoughtful reply. Now looking back at my question, I feel that it is ok to allow my students to utilize the sprites and stages that others created because it gives them more time to program, which is the ultimate goal of the program. I will follow your lead in using the beginning of the course to teach the ways to use the various drawing tools then after that we will mostly use our time to program. My students will be using computers for the first time and as a matter of fact it might be the first time that they have ever seen a computer so I want to keep my lessons focused and simple. I need to be careful not to overwhelm them or intimidate them with my course. When teaching your course do you use a projector to demonstrate how to create a game? The classrooms for this course will not have projectors so I am trying to think of other ways to help the teachers explain how to move blocks around without them having to go to each student individually. Do you have any suggestions? Flash cards? Felt boards with movable pieces? Do you have any of your students games posted on Scratch? I really appreciate your advice and I look forward to hearing from you! Best,

It can be fun to customise the existing sprites too, which provides a balance between getting rapid results and enabling students to express themselves.

That's a good point Sean. I forgot about that option. I will make some customized sprites to show my students the different options. Thank you! Tiffany

As a first time Scratch teacher myself, I think it's OK to use canned sprites, get 'em going on the simple logic programming, then steer the kids to a more customized stage background. You didn't mention the student's grade & class size, do you feel they're mostly budding artist ? Or geeks &hackers to-be ? I think we're all guilty of teaching what we know. Being a software developer myself, I naturally lean on the programming & logicside of teaching. To be honest, Scratch drawing tools isn't that great ... Video game design is a field right-down-the-middle, Maybe you can guide them with story book outline, skeatch out the game board & sprite interactions, get small pieces working, then go back & pretty it up on asethics.

