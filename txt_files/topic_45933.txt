Hello, I am mentoring 3 new teachers to CS and I was surprised how they responded to the Debut it Unit 1 challenges. The Flip the Cat Debut IT 3 challenge stumped them as it had a Click Sprite Event, followed by turn blocks each turn right 90 degrees. With these 4 blocks, it is impossible to see the cat flip without putting a Wait block in between the turns or using a repeat 4x block with 1 turn 90 and 1 wait. They really didn't know how to guide the students. The Debug 1.2 using glide and the Debug 1.4 requiring students to explore also stomped my new CS teachers. Do you have any advice to give the other than encouraging them to explore the blocks before class to solve the problems? Kelly

Hi Kelly! I have experience doing these challenges with both non-CS teachers, so equivalent to your new CS teachers, as well as students. In both situations, they were able to pick which challenges they wanted to tackle, moving freely among them in any order. I taught an online course for teachers in my district about Creative Computing/Computational Thinking and none of the participants were straight-up CS teachers. We tried out the Debug It Challenges. I found some responses from their own experiences about how they worked through the challenges. Hopefully these might be helpful with your teachers. Learning from Peers/Collaboration "At first I tried out adding some different buttons, a new green flag, a repeat, etc. I then looked at other students revisions and saw what they did, which inspired me to instead use a new motion button, and I liked that the best!" Step Away "I found that if I took a break, I was much more inclined to solve the problem quickly. I chose to debug a couple of challenges in Unit 4. I tried a few in the first two units but found the answers obvious and moved up a few levels." Persistence "I kept playing, tried different approaches and whallah! I finally got it to work. There is such a sense of gratification when you fix something!" Experimentation "When I first read that we had to debug projects I thought I wouldn't be able to do it! It turned out much easier than I anticipated and I felt successful. I thought the difficulty of the projects would increase a lot, but it seemed to stay a bit basic. I definitely appreciated that because I learned even more about the blocks, such as how to make a sprite flip. I also noticed myself thinking of the computational practices as I went through the exercises. How did I debug the projects? Mostly through experimentation. When I was done though, I did look at other projects (reuse and remix). For the last debugging activity, i did get the cat to saw meow with the speech bubble, but it was slow. I noticed another classmate used different blocks to get the cat to talk faster. We both completed the activity, but in a different way. Then I wondered, is one way the RIGHT way or does it matter if we both completed the project? I'm not sure it matters, but I think that we can learn a lot from each other." Talking It Out (and I would add in acting out the task) "When debugging, in all areas of life, I talk to myself. A LOT. With the debugging activities, I would read the instructions (sometimes incorrectly, as I discovered!), and then repeat the problem out loud in my own terms, and then go back and re-read one more time. From there, I would go to the activity, open the script to examine it, and run it to see if what actually happened would align with what I thought was wrong. Next, Id take a deeper look at the buggy script, and start experimenting with changing the blocks, testing after each change was made. It was similar to helping someone edit their video projects-- if theres a gap in their media, or their image fades too quickly, or their audio is out of sync: you have to debug. You have to keep trying things bit by bit, and then run it with each small change. And another vote for stepping away But sometimes, you have to step away and come back to it. You can get so deeply hung up on fixing one part that you lose sight of the entire project, and thats when its time to take a break. I mentioned this to Ingrid-- that definition of insanity: Insanity is when you keep doing the same thing and expecting different results..." When you take some time to step back, look at the larger puzzle and all the other pieces in front of you, you can easily find the right fit. This happened for me in a few of the debugging activities here I took a break, went outside and shoveled snow, and came back in and suddenly the answer was right in front of me!" Ingrid and some awesome CPS Teachers

