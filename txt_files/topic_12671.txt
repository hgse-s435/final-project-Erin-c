An interesting problem is developing in my class and I'm just wondering if anyone might have some ideas. As the students (high school) are getting better with Scratch, their programming problems are getting more complex but not the creativity of the projects. The class is becoming fragmented as fewer and fewer can help with the programming problems. Those who are natural programmers are getting impatient when they are not able to solve more advanced problems and those who are not, finding the problems too complex to follow, are dropping out of what was a very collaborative environment earlier! Any thoughts or ideas????

Perhaps you could introduce some collaborative scaffolding? Like, build in explicit opportunities for your students to talk with each other and give each other feedback?

Yes, the opportunities to talk need to not be abandoned! I can't believe how easy it is to give in to the "we just want time to work and learn and not keep talking" line from students! I've been so happy that everyone is so engaged with Scratch that sometimes it seems even odd to me to take away from a chunk of experimenting time to sit and talk together. Yet of course there's more to it than just that... I think we need to keep articulating the importance of when you work and when you talk and the relationship - especially with "computer" courses and with large classes in school. Maybe this is less of an issue for afterschool programs. We're at the point of making games. We are launching this "unit" - although I have a feeling it will be the rest of the year... by visiting the collection at the Museum of the Moving Image and in fact our tour will have an emphasis on the history of the moving image and early video games. When we return, I plan to do some game theory. One activity is a box filled with odd objects and groups make "games." I'm hoping this will help bring us back to our good sharing environment. It seems natural that Scratch would lead to more complex programming issues. I'd like to also know how other teachers keep the interative thinking going with more advanced users. I don't think we're at a point where Scratch will no longer meet our needs so how have others done troubleshooting when a few students are really stuck? I've directed some to the open Scratch community but it's too late in the game for them to have patience for looking how to find help. I'm thinking that next year, the use of the community needs to have a much greater place in the curriculum from the start. What have you found?

