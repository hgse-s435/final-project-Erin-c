Do you have any favorite activities or approaches to introduce Scratch to beginners? At the moment, I really like something from this set: 8 blocks: Create any project given a particular set of eight Scratch blocks. Monkey business: (with very little introduction to the Scratch user interface, just showing how to snap blocks together) Create a project where something surprising happens to a monkey. Interactive me: (with a walkthrough of how to create an interactive sprite) Create an interactive project that helps others learn about you and the people, issues, and things you care about. What do you do?

I'm still learning Scratch, but I took the risk of staying one lesson ahead of the kids this year and taught it in our computer lab. I used the How to use Scratch Intro video from the videos page on the Scratch website as the very first exposure. This gets the students curious and interested to get in and explore on their own. I guide them through all the "buttons", give them some exploratory time, and then they start a simple walkthrough lesson. This introduces the concepts of deleting and painting new sprites, switching costumes, and using the forever block. It's very simple, and we don't get into naming sprites or importing them just yet. The stage stays blank, too. From this point, some students are going to rocket off on their own and start self-directed learning, trying out new blocks and jazzing up this lesson. For others, it at least makes it seem easy to do, and they are willing to do some more tutorials to get some projects done. I like doing a step-by-step tutorial like this at the beginning because it allows all students to have a feeling of success, and this gets their interest peaked. Although, at our advanced users Scratch summer camp, the kids really breezed right through this and were eager to move on to something more challenging. The projects that are included in Scratch are great examples, too.

My museum uses Scratch both in our museum for summer classes and workshops and in local libraries. Because we're sometimes working in drop-in settings where we might have a youth come in and spend time anywhere from 5 to 60 minutes, We've started to introduce Scratch in a whole new way: We have computers set up with Scratch running, and invite youth to come and try the a 'new' program called Scratch. We have Scratch projected on a screen and withing a minute or two we'll show them how to do a couple things: click on the word 'file' in the menu, then go down to 'open' then show them the 'examples' button over on the leftr side of the window that pops up. Normally once we get this far they're off exploring - and ignoring us ( until they have a question). We'll show how to open the folders to the youth who're interested and then call out to everyone how if you click once on a project name in the folder list, you get a preview. Finally once they have the program open we try to get their attention ( we see them ignoring us as they mess about with Scratch as a very good thing) and show them that that green flag button will often get the program started. Sometimes the room suddenly becomes noisy with sound, and sometimes not - if not we'll prompt them that some of the projects make sound or music ( and sometimes this is where we need to help get sound working ( if available)) This usually ends up being 15-30 minutes. Whats been very suprising ( and a bit unerving even) is that we're finding we do not have to tour the youth through the program buttons and menus - and in fact when we've stuck to a tour of Scratch ( beyond file/open/green flag) they're often not listening and moving ahead on their own. We've been calling this our 'just in time' introduction. What can follow is dropping a scratch card next to computers, or simply getting everyones attention once they've begun, and showing them how to draw a sprite ( and thats the next discussion)

I've been teaching Scratch for about 2 or 3 years, whenever I first found out about it. I download the Scratch video and the kids love watching that, about how they can do these projects too just by "messing around." Then I introduce the blocks, noting color and what they each do. After that, I take out one of the cards from the Scratch site, an easy one like maybe the ghost gliding, and then they are hooked. But, I don't let them go free yet... no, Imake them do enough until it's 5 min. till end of class. Then they play. Then next time, I finish the cards and give them little assignments. Before you know it, they have taken off in 10 directions. I find if they don't have enough knowledge before they are set free that they just pile the sprites onto one another. But, if they know how to make them move then it goes much better!

I typically work with kids from 6 yrs up to 10 yrs who have no Scratch/programing experience at all in small groups (6-12 at a time). We havebeenusingPicoBlocks but I keep a laptop on the side of our classroom withvariousScratch applications I've coded. The first thing I do is ask who has used a computer before and similar questions, the point being to take them from feeling unfamiliar with the whole thing straight to "Oh, yeah I guess I have more experience than I thought." Then I explain how a computer only does what you tell it to. I briefly imitate a robot and get them to "program" me by giving me audible commands. I set a goal of making me get across the room and pick up an object. I have a lot of fun with i and they do to. For example, they figure out to tell me "Start walking" pretty quickly but become highly amused when I walk straight ahead into the wall. This segues into a brief run down of some of the things you can do with the system. Then I give everyone their Lego sets and let them spend some time doing nothing but working with the pieces. Next, we pick our first project and off we go! With this age group and time constraints running from 5 days of 4 hour classes or even one day of 3 hours, I have to do a lot ofpre-planning and maintain aflexiblelesson plan. I am also teaching at a museum so 1)they are paying to be there 2) we want them to come back 3) they don't have to come back! So I make sure that they know about my basic rules from day one... If we're not having fun, we are doing something wrong. There are no wrong answers in my classroom because you can learn from anything. We share materials and help each other. That's pretty much it. I also do not stand for "telling on each other." In my small environment, I am aware of everything that goes on. Most of the time when a student complains about another student, they were sharing in the alleged "trouble" up until they decided to get the other one in trouble. Mystudentsreadily accept this as I explain everything in a way that they can understand andrelateto instead of as a "way it is" rule. I get their sympathy with this by asking them "What happens we we have to stop having fun so I can handle problems?" "Do we want to lose the little time we have to play over silly stuff?" Basically, I use empathy as often as I can. It is not about you, me, or them, it is about us. Of course no plan is perfect so even if I have to address a student one on one, I make sure that they feel as though we are 2 people talking instead of me coming across like the light-flickering school teacher demanding/begging for their attention. I am very fortunate to be working in such a wonderful setting. I am allowed to step outside the normal teaching boundaries imposed in the Public School System and I getexcellentresults. My students often do not want to take theirbreak time. At the end of the day, I have to make them go home. They beg to know about more classes, where to purchase the supplies we use, and they show up for the next set of classes. It probably helps that I am a born performer so I have an intuitive knack for reading people and situations. I also pride myself on thinking outside the box. Our town is rather small and sometimes can feel bleak. We are extremely lucky just to have the facilities we use. So I repeatedly resort to my own provenmethodology... immediately knock them sideways with something they aren't expecting, now you've got their attention and better yet their interest, now con them into thinking that this is all just a big fun playtime. Once they go into "We're having fun mode" I can cram an unbelievable amount of knowledge in at every opportunity cause know we're not learning, we're playing. I was a gifted student who was failed by the school system. I also come from a long line of educators. I see instructors time and time again who seem to act like they themselves were programmed (somewhat poorly) by someone using Scratch. And my heart goes out to all the teachers who have been constrained by administrators and dogooderswho understand bottom lines far better than a random child standing in front of them. I do it because I love it and there is nothing more infectious than that. I guess i hindsight, maybe school didn't fail me after all. From conflict comes action!

Thanks for sharing what you do. I find it helpful. I am working on developing a program to teach Scratch to younger children in the age group 6 to 9. Best regards, Ai Boon

Keith Braafladt said "Whats been very suprising ( and a bit unerving even) is that we're finding we do not have to tour the youth through the program buttons and menus..." I think there has been a huge shift in the way that kids learn. Older generations were as a rule more prone to be wary of hitting the 'wrong' button. Newer generations already know concepts so instead of not hitting the buttons, they punch away. This is because they are familiar with and expecting/looking for concepts... Save, Delete, Enter, Reset, etc. Personally I suspect that this gives them somewhat of a leg up on various learning curves.

