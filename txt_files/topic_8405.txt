Do you have ideas for the next version of Scratch? Check out the suggestions athttp://suggest.scratch.mit.edu/-- and post your ideas for discussion either here or there! Thanks, K

could there be a edu-gallery where the projects are school appropriate where teachers have accounts and only approved projects posted?? LOVEEVERYTHINGELSE!!!!!!!!!!!!!!!!!

Scratch is pretty amazing, don't give in to user demands to add feature after feature ... pretty soon it would become ... the next Eclipse. However, if you do find that there is some pressure to add extra features, consider making them only accessible to people at certain levels. e.g., add a Preference setting with different levels, e.g., Beginner Experienced User Power User so that extra features get enabled only when asked for. Michael

Indroduction to the concept of object instances. This is useful both in the educational sense as well as the practical one. For instance, when creating a "Pong" game with blocks- one would want to create a single "block" object, which can receive x and y location parameters. One would then create several identical "block" instances, with the same appearance and bahaviour, only different location on the screen. Thanks!

I'd love to see improved connection to the outside world. The ScratchBoard is a great start - but it would be nice to have connectivity to some of the established microcontroller families; PICAXE, Arduino, (mbed?).... Kids would would benefit hugely from the ability to engage with notonly programming but hardware hacking as well - and all of these hardware families (Arduino especially) would be far more accessible if they had a Scratch programming interface. I can see that trying to implement all of the many (different) features of these hardware families would be many steps too far - but perhaps the ability to programme simple control sequences and respond to even just digital sensors (analogue would be nice too) would be a start. Once someone has been introduced through Scratch to one of these processors, and hooked on hardware hacking, they would have the motivation to jump to the native languages for these processors....

I'll mention it again here - A real-time collaborative version of Scratch. As outlined in Agnes Chang's paper, a synchronous version of Scratch where the stage is shared, but people can work on sprites independently. Plus a chat window, etc. Probably not for v2, but in my opinion, a holy grail feature for the future. Can you imagine, three or four kids from different parts of the world working on a Scratch project sychronously? It kind of blows my mind thinking about it. Anyway, I know I'm going to love Scratch 2.0. Scratch is is the most fun I've had with a computer since....Iowned an Amiga! Peter R.

A few remarks: Considering the hebrew version (Right to Left), and probably the arabic also, their are some problems with some of the blocks. The noun is located after the adjactive. Also, found lately - the file import into list options doesn't work in Hebrew with any type of file (RTF, txt etc..) Creating families of objects with the same properties (instances) is a most for todays programing teaching. No Show/Hide option for List! Also, it would be nice if you can give limited premmison on the web site, for "friends" or "me only", to view my uploaded .SB Great job - Keep it up - we love you SCratch.... O>

First of all, I'd like to reiterate Hadas' request concerning object instances. It is annoying to make so many copies of a sprite when you want to have them all behave the same way, just in differentlocations. Also, it'd be great tohave an easy way to create "walls" or "floors" - something that all typical sprites cannotpass through. Perhaps this could be a stage-only function, where you highlightcertain areas(or select all areas of a certain color on the stage) and click a button, designating it as a no-pass-thru zone. One thing that should not change, however - is the stability. I have NEVER had Scratch 'crash'. Microsoft's PowerPoint (on my Mac) is much less stable than Scratch. I tried "Alice" on the Mac - crash city! Scratch is very well designed. Keep it up!

Amiga LOL I worked at a computer store about 15 years ago that had some Amigas they never moved out... We kept them on display though. MAN could they run a good "Dragon's Lair"!

Here are some points which I think are important: 1. Commitment by installation: From the science of persuation, we know that people tend to act in consistency with their past actions and statements. Downloading and installing Scratch constitutes a clear commitment to use it, and the installed icons present a constant reminder. Visiting a website and running Scratch there does not create the same commitment, and does not leave the same kind of visible reminders. 2. Bad company: I told my 13 year old son, proficient in Scratch, that in the future it would run in his web browser. He replied "You mean like those bad internet games?". Scratch risks to be associated with a lot of simple and low-quality games that are out there. 3. System requirements: I have obtained a collection of old laptops that have become obsolete at my workpace, for use in promotion of Scratch. The laptops have more than sufficient performance for Scratch in its current version, and even have proper tall screens. (I often tell this one-line joke: "'How wide would you like your screen to be?', asked the man with the chainsaw.") The local school has a good collection of even older computers.If performance requirements increase with the new version then it may not be possible to run Scratch on machines that run it today. 4. Documentation and translation: All Scratch documentation, and translations thereof, must be laboriously upgraded when the user interface changes. This should only be done for good reason, obviously. Considering these points, my suggestion would be to make the browser version of Scratch more or less exactly the same as the free-standing application, and to continue to provide an installation file. Obviously there is a need to also run Scratch on offline computers, so I assume that this is being taken care of. A suggestion was made earlier is to make language expansions available through a level setting. This appears to me as a good way to expand Scratch while also keeping what we already have, which is very good. Torbjorn S

Along with the new text formating and layout features, I would love to see some sort of simple math type functionality. As a math teacher, the ability to write mathematical formulas in Scratch would greatly increase the the value of Scratch in the math classroom. For instance, I have been developing a math game in Scratch with my students for them to both learn and practice math concepts: http://scratch.mit.edu/projects/webstermath/1436268 We are limited, however, by our inablity to express concepts like fractions, square roots and exponents in an easily readable manner. A math type could be added to Scratch in many possible ways. If Scratch 2.0 has some sort of text box feature, then one possible solution would be to include a simple form of LaTeX. I began witing a text box program with LaTeX features already: http://scratch.mit.edu/projects/webstermath/1508149 Unfortunately, the project above runs really slowly online and capatalize every letter as it seem the java applet is not case sensitive. Furthermore, without recursion, it will be nearly impossible to allow imbedded uses of LaTeX such as a fraction containing numbers with exponents. Keep up the great work, Scratch Team. You are doing an awesome job. -Chris

I'd like a way to restrict what blocks are available, or how many of each can be used. I see a couple of uses for this: 1. As a teacher, I have a certain order that I want to present concepts in. It'd be nice if I could hide all the extra stuff, so it's easier to focus on what we're learning. I could un-hide more and more blocks as we progress, until finally we're at the full Scratch interface. 2. I often give challenges to my students that have a restriction on how many blocks they can use. Do a certain task with only a single green-flag-clicked block. Do something else without any while loops. Stuff like that. Being able to restrict the number of blocks used would make this sort of challenge easier to implement.

Hi John, This reminds me of the 8-block challenge(http://scratched.media.mit.edu/resources/8-block-scratch-activity-printout) which gives the student the design constraint of only being able to use particular blocks. I thought you might be interested in it if you haven't seen it already. M

I hadn't seen that before, but that's exactly the sort of thing I'm thinking of. I'd just like a way to pass out a starter file instead of a handout, and have Scratch enforce the block limitations automatically.

I would like to see Scratch interface with (PHP, Coldfusion, etc) and be able to populate a mySQL database and also query a mySQL database through a PHP query (ability to add Javascript and AJAX code that communicates with Scratch). Alternatively, if it had the ability to export scores to an email, PHP and Coldfusion pages could be created to enter records into a database (with some modifications).

I like to see Turtle sprites... neha

